/* 
  - Framer Motion المشروع كله بيتكلم عن مكتبه انمشين مهمه وهي 

  - motion.(element html) => motion.div or motion.p ....
  ---- اول معلومه لازم تعرفها هي ازاي تربط العنصر بتاعك بالمكتبه عشان تعمل الانمشين بتاعك والسطر السابق بيوضح الفكره

  - تاني معلومه العنصر بتاعك بيقدر بعد الربط انه يشوف كل الاتربيوتس المجهزه من المكتبه عشان تستخدمها معاه
  - ومنهم اشكال كتيره وهم 

  - initial: 
  ---- بتعبر عن شكل العنصر في الوضع الحالي او يبدا بشكل عامل ازاي وبيقبل اوبجيكت فيه كل عناصر ال سي اس اس زيه زي الاستايل بظبط في الكتابه
  
  - animate: 
  ---- بتغير العنصر من الوضع الحالي الي اي شكل انيميشن انا عايزه وبيقبل اوبجيكت فيه كل عناصر ال سي اس اس زيه زي الاستايل بظبط في الكتابه

  - transition: 
  ---- بتتحكم في سرعه واسلوب الانيمشين الي عملته وبيقبل اوبجيكت فيه كل عناصر ال سي اس اس زيه زي الاستايل بظبط في الكتابه

  - whileHover: 
  ---- بتخلني اعمل انيميشن لاي عنصر عند لامسه بالموس   وبيقبل اوبجيكت فيه كل عناصر ال سي اس اس زيه زي الاستايل بظبط في الكتابه

  - variants:
  ---- الميزه وراء استخدامي ليها اني ممكن اكتب كل عناصر ال سي اس اس علي شكل اوبجيكت وانضف الكود بتاعي واضيفه جواه المتغير دا
  ---- وكمان بتخلي العنصر الاب يورث كل خواصه الي الابن ومما يوفر عليا الكتابه في اشياء كثيره والربط بين العناصر اثناء الانيميشن
*/

/* 
  - repeat
  ---- transition ديه خاصيه بتقبلها ال 
  ---- Infinity عشان تكرر الانيميشن بتاعي لعدد معين من المرات وبتقبل مني رقم او عدد لا نهائي مع كلمه

  - repeatType: [loop, reverse, mirror]
  ---- دي خاصيه بتتكبت مع الخاصيه السابقه لتميز شكل التكرار هي هو علي شكل حلقه تكراريه او علي شكل نبضات يعني 
  ----  التحرك بين الوضع الاصلي و الوضع الي عليه الانيميشن او علي وضع المراه 

  - AnimatePresence
  ---- React مكون صمم خصيصا من المكتبه لي تحريك المكونات عند إزالتها من  
  ---- React فهو يسمح للمكونات بالتحريك عند إزالتها او اخفاها من 

  - exit
  ---- بتقبل مني كود سي اس اس عادي عشان يعمل زي انيميشن للعنصر وهو بيتحذف من المشروع او بيختفي منه
*/